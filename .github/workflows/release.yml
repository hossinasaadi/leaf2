name: releases

on:
  push:
    tags:
      - v*

jobs:
  build-bin-local:
    runs-on: [macos-latest]
    strategy:
      fail-fast: false
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: install rust toolchain
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - name: install llvm
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          brew install llvm protobuf

      - name: install target
        run: |
          rustup target add ${{ matrix.target }}

      - name: build
        run: |
          export CFG_COMMIT_HASH=`git log --pretty=format:'%h' -n 1`
          export CFG_COMMIT_DATE=`git log --format="%ci" -n 1`
          cargo build --release --target ${{ matrix.target }} -p leaf-cli

      - name: rename and compress artifacts
        run: |
          mv target/${{ matrix.target }}/release/leaf leaf-${{ matrix.target }}

      - name: upload assets
        uses: actions/upload-artifact@v4
        with:
          name: leaf-${{ matrix.target }}
          path: leaf-${{ matrix.target }}

  build-lib-apple:
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: install rust
        uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - name: install toolchain
        run: |
          cargo install cbindgen
          brew install llvm unzip protobuf

      - name: build
        run: |
          ./scripts/build_apple_xcframework.sh

      - name: zip artifacts
        run: |
          mv target/apple/release/leaf.xcframework .
          zip -r leaf.xcframework.zip leaf.xcframework

      - name: upload assets
        uses: actions/upload-artifact@v4
        with:
          name: leaf.xcframework.zip
          path: leaf.xcframework.zip

  create-release:
    needs: [build-bin-local, build-lib-apple]
    runs-on: macos-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: create upload url file
        run: |
          echo -n "${{ steps.create_release.outputs.upload_url }}" > upload_url.txt

      - name: persist upload url
        uses: actions/upload-artifact@v4
        with:
          name: upload_url.txt
          path: ./upload_url.txt

  release-mobile-libs:
    needs: [create-release]
    runs-on: macos-latest
    steps:
      - name: download upload url
        uses: actions/download-artifact@v4
        with:
          name: upload_url.txt

      - name: get upload url
        run: |
          upload_url=`cat upload_url.txt`
          echo "uploadurl=$upload_url" >> $GITHUB_ENV

      - name: download asset
        uses: actions/download-artifact@v4
        with:
          name: leaf.xcframework.zip

      - name: upload asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.uploadurl }}
          asset_path: ./leaf.xcframework.zip
          asset_name: leaf.xcframework.zip
          asset_content_type: application/octet-stream
